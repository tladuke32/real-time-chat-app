version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: chat-app-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD:-chatpasswordsecret}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-chat_app}
      MYSQL_USER: ${MYSQL_USER:-chatuser}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-chatpasswordstrongerthanstrongbutnottoostrong}
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "3306:3306"
    networks:
      - chat-network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -p$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    ports:
      - "8080:8080"
    environment:
      - MYSQL_USER=${MYSQL_USER:-chatuser}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-chatpasswordstrongerthanstrongbutnottoostrong}
      - MYSQL_HOST=${MYSQL_HOST:-mysql}
      - MYSQL_PORT=${MYSQL_PORT:-3306}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-chat_app}
      - JWT_SECRET=${JWT_SECRET:-chatpasswordstrongerthanstrongbutnottoostrong}
      - ENV=${ENV:-production}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - chat-network

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://backend:8080
    networks:
      - chat-network

networks:
  chat-network:
    driver: bridge
