{"ast":null,"code":"var _jsxFileName = \"/home/tladuke/real-time-chat-app/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat({\n  username\n}) {\n  _s();\n  // Assuming username is passed as a prop to the component\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const wsURL = process.env.REACT_APP_API_URL.replace('http', 'ws') + '/ws';\n  const [ws, setWs] = useState(null);\n\n  // Function to initialize WebSocket connection\n  const connectWebSocket = useCallback(() => {\n    const socket = new WebSocket(wsURL);\n    socket.onopen = () => {\n      console.log('Connected to WebSocket');\n    };\n    socket.onmessage = event => {\n      const data = JSON.parse(event.data); // Assuming message data comes in JSON format\n      setMessages(prevMessages => [...prevMessages, data]);\n    };\n    socket.onerror = error => {\n      console.error('WebSocket Error:', error);\n    };\n    socket.onclose = () => {\n      console.log('WebSocket connection closed');\n      // Automatically try to reconnect on unexpected closure\n      setTimeout(() => {\n        connectWebSocket();\n      }, 5000);\n    };\n    setWs(socket);\n    return () => {\n      if (socket.readyState === WebSocket.OPEN) {\n        socket.close();\n      }\n    };\n  }, [wsURL]);\n\n  // Establish WebSocket connection on component mount and clean up on unmount\n  useEffect(() => {\n    const cleanup = connectWebSocket();\n    return cleanup;\n  }, [connectWebSocket]);\n\n  // Handler for sending messages\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (ws && ws.readyState === WebSocket.OPEN) {\n      const messageToSend = JSON.stringify({\n        username: username || \"Anonymous\",\n        message\n      });\n      ws.send(messageToSend);\n      setMessage('');\n    } else {\n      console.error('WebSocket is not open. Cannot send message.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.username || \"Anonymous\", \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), \" \", msg.message]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"message-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Enter message\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"3XPYhlcfkPZ9+CvGB8OWweR5mKY=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","jsxDEV","_jsxDEV","Chat","username","_s","messages","setMessages","message","setMessage","wsURL","process","env","REACT_APP_API_URL","replace","ws","setWs","connectWebSocket","socket","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","prevMessages","onerror","error","onclose","setTimeout","readyState","OPEN","close","cleanup","handleSubmit","e","preventDefault","messageToSend","stringify","send","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","idx","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["/home/tladuke/real-time-chat-app/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\n\nfunction Chat({ username }) { // Assuming username is passed as a prop to the component\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState('');\n    const wsURL = process.env.REACT_APP_API_URL.replace('http', 'ws') + '/ws';\n    const [ws, setWs] = useState(null);\n\n    // Function to initialize WebSocket connection\n    const connectWebSocket = useCallback(() => {\n        const socket = new WebSocket(wsURL);\n\n        socket.onopen = () => {\n            console.log('Connected to WebSocket');\n        };\n\n        socket.onmessage = (event) => {\n            const data = JSON.parse(event.data); // Assuming message data comes in JSON format\n            setMessages(prevMessages => [...prevMessages, data]);\n        };\n\n        socket.onerror = (error) => {\n            console.error('WebSocket Error:', error);\n        };\n\n        socket.onclose = () => {\n            console.log('WebSocket connection closed');\n            // Automatically try to reconnect on unexpected closure\n            setTimeout(() => {\n                connectWebSocket();\n            }, 5000);\n        };\n\n        setWs(socket);\n        return () => {\n            if (socket.readyState === WebSocket.OPEN) {\n                socket.close();\n            }\n        };\n    }, [wsURL]);\n\n    // Establish WebSocket connection on component mount and clean up on unmount\n    useEffect(() => {\n        const cleanup = connectWebSocket();\n        return cleanup;\n    }, [connectWebSocket]);\n\n    // Handler for sending messages\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (ws && ws.readyState === WebSocket.OPEN) {\n            const messageToSend = JSON.stringify({ username: username || \"Anonymous\", message });\n            ws.send(messageToSend);\n            setMessage('');\n        } else {\n            console.error('WebSocket is not open. Cannot send message.');\n        }\n    };\n\n    return (\n        <div className=\"chat-container\">\n            <h2>Chat</h2>\n            <div className=\"messages\">\n                {messages.map((msg, idx) => (\n                    <div key={idx} className=\"message\">\n                        <strong>{msg.username || \"Anonymous\"}:</strong> {msg.message}\n                    </div>\n                ))}\n            </div>\n            <form onSubmit={handleSubmit} className=\"message-form\">\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={message}\n                    onChange={(e) => setMessage(e.target.value)}\n                    placeholder=\"Enter message\"\n                    required\n                />\n                <button type=\"submit\" className=\"btn btn-primary\">Send</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}