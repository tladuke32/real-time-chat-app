{"ast":null,"code":"import React,{useEffect,useState,useCallback}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Chat(_ref){let{username}=_ref;// Assuming username is passed as a prop to the component\nconst[messages,setMessages]=useState([]);const[message,setMessage]=useState('');const wsURL=process.env.REACT_APP_API_URL.replace('http','ws')+'/ws';const[ws,setWs]=useState(null);// Function to initialize WebSocket connection\nconst connectWebSocket=useCallback(()=>{const socket=new WebSocket(wsURL);socket.onopen=()=>{console.log('Connected to WebSocket');};socket.onmessage=event=>{const data=JSON.parse(event.data);// Assuming message data comes in JSON format\nsetMessages(prevMessages=>[...prevMessages,data]);};socket.onerror=error=>{console.error('WebSocket Error:',error);};socket.onclose=()=>{console.log('WebSocket connection closed');// Automatically try to reconnect on unexpected closure\nsetTimeout(()=>{connectWebSocket();},5000);};setWs(socket);return()=>{if(socket.readyState===WebSocket.OPEN){socket.close();}};},[wsURL]);// Establish WebSocket connection on component mount and clean up on unmount\nuseEffect(()=>{const cleanup=connectWebSocket();return cleanup;},[connectWebSocket]);// Handler for sending messages\nconst handleSubmit=e=>{e.preventDefault();if(ws&&ws.readyState===WebSocket.OPEN){const messageToSend=JSON.stringify({username:username||\"Anonymous\",message});ws.send(messageToSend);setMessage('');}else{console.error('WebSocket is not open. Cannot send message.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Chat\"}),/*#__PURE__*/_jsx(\"div\",{className:\"messages\",children:messages.map((msg,idx)=>/*#__PURE__*/_jsxs(\"div\",{className:\"message\",children:[/*#__PURE__*/_jsxs(\"strong\",{children:[msg.username||\"Anonymous\",\":\"]}),\" \",msg.message]},idx))}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"message-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",value:message,onChange:e=>setMessage(e.target.value),placeholder:\"Enter message\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",children:\"Send\"})]})]});}export default Chat;","map":{"version":3,"names":["React","useEffect","useState","useCallback","jsx","_jsx","jsxs","_jsxs","Chat","_ref","username","messages","setMessages","message","setMessage","wsURL","process","env","REACT_APP_API_URL","replace","ws","setWs","connectWebSocket","socket","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","prevMessages","onerror","error","onclose","setTimeout","readyState","OPEN","close","cleanup","handleSubmit","e","preventDefault","messageToSend","stringify","send","className","children","map","msg","idx","onSubmit","type","value","onChange","target","placeholder","required"],"sources":["/home/tladuke/real-time-chat-app/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\n\nfunction Chat({ username }) { // Assuming username is passed as a prop to the component\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState('');\n    const wsURL = process.env.REACT_APP_API_URL.replace('http', 'ws') + '/ws';\n    const [ws, setWs] = useState(null);\n\n    // Function to initialize WebSocket connection\n    const connectWebSocket = useCallback(() => {\n        const socket = new WebSocket(wsURL);\n\n        socket.onopen = () => {\n            console.log('Connected to WebSocket');\n        };\n\n        socket.onmessage = (event) => {\n            const data = JSON.parse(event.data); // Assuming message data comes in JSON format\n            setMessages(prevMessages => [...prevMessages, data]);\n        };\n\n        socket.onerror = (error) => {\n            console.error('WebSocket Error:', error);\n        };\n\n        socket.onclose = () => {\n            console.log('WebSocket connection closed');\n            // Automatically try to reconnect on unexpected closure\n            setTimeout(() => {\n                connectWebSocket();\n            }, 5000);\n        };\n\n        setWs(socket);\n        return () => {\n            if (socket.readyState === WebSocket.OPEN) {\n                socket.close();\n            }\n        };\n    }, [wsURL]);\n\n    // Establish WebSocket connection on component mount and clean up on unmount\n    useEffect(() => {\n        const cleanup = connectWebSocket();\n        return cleanup;\n    }, [connectWebSocket]);\n\n    // Handler for sending messages\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (ws && ws.readyState === WebSocket.OPEN) {\n            const messageToSend = JSON.stringify({ username: username || \"Anonymous\", message });\n            ws.send(messageToSend);\n            setMessage('');\n        } else {\n            console.error('WebSocket is not open. Cannot send message.');\n        }\n    };\n\n    return (\n        <div className=\"chat-container\">\n            <h2>Chat</h2>\n            <div className=\"messages\">\n                {messages.map((msg, idx) => (\n                    <div key={idx} className=\"message\">\n                        <strong>{msg.username || \"Anonymous\"}:</strong> {msg.message}\n                    </div>\n                ))}\n            </div>\n            <form onSubmit={handleSubmit} className=\"message-form\">\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={message}\n                    onChange={(e) => setMessage(e.target.value)}\n                    placeholder=\"Enter message\"\n                    required\n                />\n                <button type=\"submit\" className=\"btn btn-primary\">Send</button>\n            </form>\n        </div>\n    );\n}\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}