{"ast":null,"code":"var _jsxFileName = \"/home/tladuke/real-time-chat-app/src/components/Notifications.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Notifications() {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const wsURL = process.env.REACT_APP_API_URL.replace('http', 'ws') + '/ws';\n  useEffect(() => {\n    const ws = new WebSocket(wsURL);\n    ws.onmessage = event => {\n      const data = JSON.parse(event.data);\n      if (data.type === 'notification') {\n        setNotifications(notifs => [...notifs, data.message]);\n      }\n    };\n    return () => {\n      ws.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: notifications.map((notif, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: notif\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(Notifications, \"6gMUc0OfbF4zJu51/S5RmKCczuA=\");\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Notifications","_s","notifications","setNotifications","wsURL","process","env","REACT_APP_API_URL","replace","ws","WebSocket","onmessage","event","data","JSON","parse","type","notifs","message","close","children","map","notif","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/tladuke/real-time-chat-app/src/components/Notifications.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction Notifications() {\n    const [notifications, setNotifications] = useState([]);\n    const wsURL = process.env.REACT_APP_API_URL.replace('http', 'ws') + '/ws';\n\n    useEffect(() => {\n        const ws = new WebSocket(wsURL);\n\n        ws.onmessage = (event) => {\n            const data = JSON.parse(event.data);\n            if (data.type === 'notification') {\n                setNotifications(notifs => [...notifs, data.message]);\n            }\n        };\n\n        return () => {\n            ws.close();\n        };\n    }, []);\n\n    return (\n        <div>\n            {notifications.map((notif, index) => (\n                <div key={index}>{notif}</div>\n            ))}\n        </div>\n    );\n}\n\nexport default Notifications;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMO,KAAK,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAACC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,KAAK;EAEzEZ,SAAS,CAAC,MAAM;IACZ,MAAMa,EAAE,GAAG,IAAIC,SAAS,CAACN,KAAK,CAAC;IAE/BK,EAAE,CAACE,SAAS,GAAIC,KAAK,IAAK;MACtB,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;MACnC,IAAIA,IAAI,CAACG,IAAI,KAAK,cAAc,EAAE;QAC9Bb,gBAAgB,CAACc,MAAM,IAAI,CAAC,GAAGA,MAAM,EAAEJ,IAAI,CAACK,OAAO,CAAC,CAAC;MACzD;IACJ,CAAC;IAED,OAAO,MAAM;MACTT,EAAE,CAACU,KAAK,CAAC,CAAC;IACd,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIpB,OAAA;IAAAqB,QAAA,EACKlB,aAAa,CAACmB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC5BxB,OAAA;MAAAqB,QAAA,EAAkBE;IAAK,GAAbC,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAChC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAAC1B,EAAA,CA1BQD,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AA4BtB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}